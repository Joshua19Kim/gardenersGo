const csrfToken = document.querySelector("meta[name='_csrf']").getAttribute("content");
const csrfHeader = document.querySelector("meta[name='_csrf_header']").getAttribute("content");
const resultContainer = document.getElementById('resultContainer');
const errorContainer= document.getElementById('errorContainer');
const imageInput= document.getElementById('imageInput');
const imagePreview= document.getElementById('imagePreview');
const saveToCollectionButton= document.getElementById('saveToCollectionButton');
const fileName= document.getElementById('fileName');
const gbifInfo= document.getElementById('gbifInfo');

let identifiedPlantData = null;
var goToCollectionButton = document.getElementById('goToCollectionButton');
document.addEventListener('DOMContentLoaded', function() {
    var scanningModal = document.getElementById('scanningModal');
    var defaultImageSrc = './images/defaultScanningImage.png';

    // this is to refresh the modal when it is closed
    scanningModal.addEventListener('hidden.bs.modal', function () {
        document.getElementById('scanForm').reset();
        resultContainer.style.display = 'none';
        errorContainer.style.display = 'none';
        imageInput.value = '';
        imagePreview.src = defaultImageSrc;
        saveToCollectionButton.style.display = 'none';
        fileName.value = '';
        fileName.style.display = 'none';
        gbifInfo.style.display = 'none';
    })
    // this is to show image preview when a file is selected
    document.getElementById('imageInput').addEventListener('change', function(event) {
        var file = event.target.files[0];
        fileName.textContent = file.name;
        fileName.style.display = 'block';
        if (file) {
            var reader = new FileReader();

            reader.onload = function(e) {
                var img = document.getElementById('imagePreview');
                img.src = e.target.result;
            }

            reader.readAsDataURL(file);
        } else {
            document.getElementById('imagePreview').src = defaultImageSrc;
            document.getElementById('fileName').value = '';
        }
    });

    document.getElementById('identifyButton').addEventListener('click', function(event) {
        event.preventDefault();
        var formData = new FormData(document.getElementById('scanForm'));

        resultContainer.innerHTML = '<div class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>';
        resultContainer.style.display = 'block';
        gbifInfo.style.display = 'block';
        errorContainer.style.display = 'none';
        saveToCollectionButton.style.display = 'none';


        <!--The code below was generated by Claude-->
        fetch('/identifyPlant', {
            method: 'POST',
            headers: {
                [csrfHeader]: csrfToken
            },
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    errorContainer.textContent = data.error;
                    errorContainer.style.display = 'block';
                    resultContainer.style.display = 'none';
                    saveToCollectionButton.style.display = 'none';
                    gbifInfo.style.display = 'none';
                    fileName.value = '';
                    fileName.style.display = 'none';


                } else {
                    identifiedPlantData = data
                    var resultHtml = `
                            <div class="d-flex gap-4 p-3">
                                <div class="flex-shrink-0">
                                    <strong>Sample Image:</strong>
                                    <br>${data.imageUrl ? `<img src="${data.imageUrl}"
                                        class="img-fluid"
                                        style="max-width: 200px; max-height: 200px; object-fit: contain;">`
                        : 'No image available'}
                                </div>
                                <div class="d-flex flex-column gap-3 mt-3">
                                    <div class="d-flex flex-column gap-1">
                                        <strong>Plant Name:</strong>
                                        <div>${data.bestMatch || 'No record'}</div>
                                    </div>
                                    <div><strong>Score:</strong> ${data.score + " / 1" || 'No record'}</div>
                                    <div><strong>Common Names:</strong> ${data.commonNames && data.commonNames.length > 0 ? data.commonNames.join(', ') : 'No record'}</div>
                                    <div><strong>*GBIF ID:</strong> ${data.gbifId || 'No record'}</div>
                                </div>
                            </div>
                        `;
                    resultContainer.innerHTML = resultHtml;
                    resultContainer.style.display = 'block';
                    errorContainer.style.display = 'none';
                    saveToCollectionButton.style.display = 'block';
                    gbifInfo.style.display = 'block';
                }
            })
            .catch(error => {
                errorContainer.textContent = 'An error occurred: ' + error.message;
                errorContainer.style.display = 'block';
                resultContainer.style.display = 'none';
                saveToCollectionButton.style.display = 'none';
                gbifInfo.style.display = 'none';
                fileName.value = '';
                fileName.style.display = 'none';

            });
    });
});

saveToCollectionButton.addEventListener('click', function() {
    if (identifiedPlantData) {
        fetch('/saveIdentifiedPlant', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="_csrf"]').getAttribute('content')
            },
            body: JSON.stringify(identifiedPlantData)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                var successModal = new bootstrap.Modal(document.getElementById('successModal'));
                successModal.show();
                var modal = bootstrap.Modal.getInstance(document.getElementById('scanningModal'));
                modal.hide();
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('An error occurred while saving the plant.');
            });
    } else {
        alert('No plant data to save. Please identify a plant first.');
    }
});
goToCollectionButton.addEventListener('click', function() {
    var modal = bootstrap.Modal.getInstance(successModal);
    modal.hide();
    setTimeout(function() {
        window.location.href = goToCollectionButton.getAttribute('data-url');
    }, 150);
});