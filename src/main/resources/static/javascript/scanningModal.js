const csrfToken = document.querySelector("meta[name='_csrf']").getAttribute("content");
const csrfHeader = document.querySelector("meta[name='_csrf_header']").getAttribute("content");
const identifyButton = document.getElementById('identifyButton');
const resultContainer = document.getElementById('resultContainer');
const errorContainer= document.getElementById('errorContainer');
const imageInput= document.getElementById('imageInput');
const imagePreview= document.getElementById('imagePreview');
const plantNetLogo = document.getElementById('plantNetLogo');
const saveToCollectionButton= document.getElementById('saveToCollectionButton');
const commonNames = document.getElementById('commonNames');
const fileName= document.getElementById('fileName');
const gbifInfo= document.getElementById('gbifInfo');


let identifiedPlantData = null;
var goToCollectionButton = document.getElementById('goToCollectionButton');


function openGbifDetails(gbifId) {
    window.open(`https://www.gbif.org/species/${gbifId}`, '_blank');
}

document.addEventListener('DOMContentLoaded', function() {
    var scanningModal = document.getElementById('scanningModal');
    var defaultImageSrc = `${getBaseUrl()}/images/defaultScanningImage.png`;
    imagePreview.src = defaultImageSrc
    plantNetLogo.src = `${getBaseUrl()}/images/apiLogo/powered-by-plantnet-light.png`;

    // this is to refresh the modal when it is closed
    scanningModal.addEventListener('hidden.bs.modal', function () {
        document.getElementById('scanForm').reset();
        resultContainer.style.display = 'none';
        errorContainer.style.display = 'none';
        imageInput.value = '';
        imagePreview.src = defaultImageSrc;
        saveToCollectionButton.style.display = 'none';
        fileName.value = '';
        fileName.style.display = 'none';
        gbifInfo.style.display = 'none';
    })
    // this is to show image preview when a file is selected
    imageInput.addEventListener('change', function(event) {
        var file = event.target.files[0];
        fileName.textContent = file.name;
        fileName.style.display = 'block';
        if (file) {
            var reader = new FileReader();

            reader.onload = function(e) {
                var img = document.getElementById('imagePreview');
                img.src = e.target.result;
            }

            reader.readAsDataURL(file);
        } else {
            imagePreview.src = defaultImageSrc;
            fileName.value = '';
        }
    });

    //This is what happens when you click identify button
    identifyButton.addEventListener('click', function(event) {
        event.preventDefault();
        var formData = new FormData(document.getElementById('scanForm'));

        resultContainer.innerHTML = '<div class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>';
        resultContainer.style.display = 'block';
        gbifInfo.style.display = 'block';
        errorContainer.style.display = 'none';
        saveToCollectionButton.style.display = 'none';

        const identifyUrl = `${getBaseUrl()}/identifyPlant`;
        <!--The code below was generated by Claude-->
        fetch(identifyUrl, {
            method: 'POST',
            headers: {
                [csrfHeader]: csrfToken
            },
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    errorContainer.textContent = data.error;
                    errorContainer.style.display = 'block';
                    resultContainer.style.display = 'none';
                    saveToCollectionButton.style.display = 'none';
                    gbifInfo.style.display = 'none';
                    fileName.value = '';
                    fileName.style.display = 'none';


                } else {
                    //Store the identified plant to pass to the back-end later if user wants to save.
                    identifiedPlantData = data
                    var resultHtml = `
                            <div class="d-flex flex-column flex-md-row gap-4 p-3">
                                <div class="flex-shrink-0">
                                    <strong>Sample Image:</strong>
                                    <br>${data.imageUrl ? `<img src="${data.imageUrl}"
                                        class="img-fluid"
                                        style="max-width: 200px; max-height: 200px; object-fit: contain;">`
                                                : 'No image available'}
                                </div>
                                <div class="flex-grow-1 overflow-auto">
                                    <div class="d-flex flex-column gap-3">
                                        <div>
                                            <strong>Plant Name:</strong>
                                            <div class="text-break">${data.bestMatch || 'No record'}</div>
                                        </div>
                                        <div><strong>Score:</strong> ${data.score + " / 1" || 'No record'}</div>
                                        <div>
                                            <strong>Common Names:</strong> 
                                            <div class="text-break">${data.commonNames && data.commonNames.length > 0 ? data.commonNames.join(', ') : 'No record'}</div>
                                        </div>
                                        <div class="d-flex align-items-center flex-wrap">
                                            <strong>*GBIF ID:</strong>
                                            <span class="ms-1 text-break">${data.gbifId || 'No record'}</span>
                                            <button onclick="openGbifDetails('${data.gbifId}')" class="detail-button btn btn-sm btn-outline-secondary ms-2 py-0 px-1" style="font-size: 0.75rem;">
                                                See details
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                    resultContainer.innerHTML = resultHtml;
                    resultContainer.style.display = 'block';
                    errorContainer.style.display = 'none';
                    saveToCollectionButton.style.display = 'block';
                    gbifInfo.style.display = 'block';
                }
            })
            .catch(error => {
                errorContainer.textContent = 'An error occurred: ' + error.message;
                errorContainer.style.display = 'block';
                resultContainer.style.display = 'none';
                saveToCollectionButton.style.display = 'none';
                gbifInfo.style.display = 'none';
                fileName.value = '';
                fileName.style.display = 'none';

            });
    });
});


//User got the plant identified and clicks save button for myCollection
saveToCollectionButton.addEventListener('click', function() {
    if (identifiedPlantData) {
        var nameResults = identifiedPlantData.commonNames && identifiedPlantData.commonNames.length > 0 ? 'Suggestions: ' + identifiedPlantData.commonNames.join(', ') : '';
        commonNames.innerText = nameResults;
        var successModal = new bootstrap.Modal(document.getElementById('successModal'));
        successModal.show();
        var modal = bootstrap.Modal.getInstance(document.getElementById('scanningModal'));
        modal.hide();
    } else {
        alert('No plant data to save. Please identify a plant first.');
    }
});

//button directs user to myCollection page
goToCollectionButton.addEventListener('click', function() {


    var formData = new FormData(document.getElementById('identifiedPlantNameForm'));
    var name = formData.get('name');
    var description = formData.get('scanning-description');

    const saveUrl = `${getBaseUrl()}/saveIdentifiedPlant`;
    fetch(saveUrl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.querySelector('meta[name="_csrf"]').getAttribute('content')
        },
        body: JSON.stringify({ name: name, description: description })
    })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => {
                    if (data.nameError) {
                        document.getElementById('name').classList.add('is-invalid');
                        document.getElementById('nameError').booleanValue= true;
                        document.getElementById('nameError').innerText= data.nameError;
                    }
                    if (data.descriptionError) {
                        document.getElementById('description').classList.add('is-invalid');
                        document.querySelector('[th\\:text="${descriptionError}"]').innerText = data.descriptionError;
                    }
                    throw new Error('Validation failed');
                })
            }
            return response.json();
        })
        .then(data => {
            var plantBadge = data.plantBadge;
            var modal = bootstrap.Modal.getInstance(successModal);
            if(plantBadge !== undefined) {
                window.location.href = `${getBaseUrl()}/myCollection?savedPlant=${data.savedPlant}&badgeEarned=` + plantBadge;
            } else {
                window.location.href = `${getBaseUrl()}/myCollection?savedPlant=${data.savedPlant}`;
            }
            document.getElementById('name').value = "";
            document.getElementById('scanning-description').value = "";
            document.getElementById('nameError').innerText = '';
            document.getElementById('descriptionError').innerText = '';
            modal.hide();
        })
        .catch((error) => {
            console.error('Error:', error);
        });

});

// Character count section below

document.getElementById('scanning-description').addEventListener('input', updateScanningCharacterCount)

function updateScanningCharacterCount() {
    var textarea = document.getElementById("scanning-description");
    var characterCount = document.getElementById("scanningCharacterCount");
    characterCount.textContent = textarea.value.length;
}

window.onload = () => {
    updateScanningCharacterCount()
}


document.getElementById("identifiedPlantNameForm").addEventListener("keydown", function(event) {
    if (event.key === "Enter") {
        var activeElement = document.activeElement;
        if (activeElement.type === "date" || activeElement.tagName === "BUTTON") {
            return true;
        } else {
            event.preventDefault();
        }
    }
});